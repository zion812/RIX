package com.rio.rostry.ui.dashboard

import androidx.compose.foundation.layout.*
import androidx.compose.foundation.lazy.LazyColumn
import androidx.compose.foundation.lazy.items
import androidx.compose.material.icons.Icons
import androidx.compose.material.icons.filled.*
import androidx.compose.material3.*
import androidx.compose.runtime.*
import androidx.compose.ui.Alignment
import androidx.compose.ui.Modifier
import androidx.compose.ui.text.font.FontWeight
import androidx.compose.ui.unit.dp
import androidx.navigation.NavController
import com.rio.rostry.auth.UserClaims
import com.rio.rostry.navigation.RIODestinations

/**
 * Dashboard for Enthusiast tier users
 * Provides full access to all platform features including advanced analytics
 */
@OptIn(ExperimentalMaterial3Api::class)
@Composable
fun EnthusiastDashboard(
    claims: UserClaims,
    navController: NavController,
    onSignOut: () -> Unit
) {
    Scaffold(
        topBar = {
            TopAppBar(
                title = { Text("RIO - Enthusiast Dashboard") },
                actions = {
                    IconButton(onClick = { navController.navigate(RIODestinations.PROFILE) }) {
                        Icon(Icons.Default.Person, contentDescription = "Profile")
                    }
                    IconButton(onClick = onSignOut) {
                        Icon(Icons.Default.ExitToApp, contentDescription = "Sign Out")
                    }
                }
            )
        },
        floatingActionButton = {
            FloatingActionButton(
                onClick = { navController.navigate(RIODestinations.FOWL_MANAGEMENT) }
            ) {
                Icon(Icons.Default.Add, contentDescription = "Add Fowl")
            }
        }
    ) { paddingValues ->
        LazyColumn(
            modifier = Modifier
                .fillMaxSize()
                .padding(paddingValues)
                .padding(16.dp),
            verticalArrangement = Arrangement.spacedBy(16.dp)
        ) {
            item {
                EnthusiastWelcomeCard(claims = claims)
            }
            
            item {
                AdvancedStatsCard()
            }
            
            item {
                Text(
                    text = "Premium Features",
                    style = MaterialTheme.typography.headlineSmall,
                    fontWeight = FontWeight.Bold
                )
            }
            
            items(getEnthusiastFeatures()) { feature ->
                FeatureCard(
                    feature = feature,
                    onClick = { navController.navigate(feature.destination) }
                )
            }
            
            item {
                PremiumBenefitsCard()
            }
        }
    }
}

@Composable
private fun EnthusiastWelcomeCard(claims: UserClaims) {
    Card(
        modifier = Modifier.fillMaxWidth(),
        colors = CardDefaults.cardColors(
            containerColor = MaterialTheme.colorScheme.primaryContainer
        )
    ) {
        Column(
            modifier = Modifier.padding(16.dp)
        ) {
            Text(
                text = "Welcome, ${claims.displayName ?: "Enthusiast"}!",
                style = MaterialTheme.typography.headlineSmall,
                fontWeight = FontWeight.Bold
            )
            Spacer(modifier = Modifier.height(8.dp))
            Text(
                text = "Tier: ${claims.tier} ⭐",
                style = MaterialTheme.typography.bodyMedium
            )
            Text(
                text = "Access all premium features and advanced breeding analytics!",
                style = MaterialTheme.typography.bodyMedium
            )
        }
    }
}

@Composable
private fun AdvancedStatsCard() {
    Card(
        modifier = Modifier.fillMaxWidth()
    ) {
        Column(
            modifier = Modifier.padding(16.dp)
        ) {
            Text(
                text = "Advanced Analytics",
                style = MaterialTheme.typography.titleMedium,
                fontWeight = FontWeight.Bold
            )
            Spacer(modifier = Modifier.height(12.dp))
            Row(
                modifier = Modifier.fillMaxWidth(),
                horizontalArrangement = Arrangement.SpaceEvenly
            ) {
                StatItem(label = "Total Fowl", value = "0")
                StatItem(label = "Bloodlines", value = "0")
                StatItem(label = "Generations", value = "0")
            }
            Spacer(modifier = Modifier.height(12.dp))
            Row(
                modifier = Modifier.fillMaxWidth(),
                horizontalArrangement = Arrangement.SpaceEvenly
            ) {
                StatItem(label = "Breeding Success", value = "0%")
                StatItem(label = "Market Value", value = "$0")
                StatItem(label = "Performance Score", value = "0")
            }
        }
    }
}

@Composable
private fun PremiumBenefitsCard() {
    Card(
        modifier = Modifier.fillMaxWidth(),
        colors = CardDefaults.cardColors(
            containerColor = MaterialTheme.colorScheme.tertiaryContainer
        )
    ) {
        Column(
            modifier = Modifier.padding(16.dp)
        ) {
            Text(
                text = "Premium Benefits Active",
                style = MaterialTheme.typography.titleMedium,
                fontWeight = FontWeight.Bold
            )
            Spacer(modifier = Modifier.height(8.dp))
            
            val benefits = listOf(
                "✓ Unlimited fowl registration",
                "✓ Advanced family tree analytics",
                "✓ Priority marketplace listings",
                "✓ Breeding performance insights",
                "✓ Export capabilities",
                "✓ Premium support"
            )
            
            benefits.forEach { benefit ->
                Text(
                    text = benefit,
                    style = MaterialTheme.typography.bodyMedium,
                    modifier = Modifier.padding(vertical = 2.dp)
                )
            }
        }
    }
}

private fun getEnthusiastFeatures(): List<DashboardFeature> {
    return listOf(
        DashboardFeature(
            title = "Fowl Management",
            description = "Advanced fowl registration and tracking",
            icon = Icons.Default.Pets,
            destination = RIODestinations.FOWL_MANAGEMENT
        ),
        DashboardFeature(
            title = "Premium Marketplace",
            description = "Priority listings and advanced search",
            icon = Icons.Default.Store,
            destination = RIODestinations.MARKETPLACE
        ),
        DashboardFeature(
            title = "Advanced Family Tree",
            description = "Detailed lineage and breeding analytics",
            icon = Icons.Default.AccountTree,
            destination = RIODestinations.FAMILY_TREE
        ),
        DashboardFeature(
            title = "Messages & Networking",
            description = "Connect with premium breeders",
            icon = Icons.Default.Chat,
            destination = RIODestinations.CHAT
        ),
        DashboardFeature(
            title = "Analytics Dashboard",
            description = "Performance metrics and insights",
            icon = Icons.Default.Analytics,
            destination = RIODestinations.PROFILE // TODO: Create analytics destination
        ),
        DashboardFeature(
            title = "Export & Reports",
            description = "Generate breeding reports and data exports",
            icon = Icons.Default.FileDownload,
            destination = RIODestinations.PROFILE // TODO: Create reports destination
        )
    )
}
