package com.rio.rostry.ui.dashboard

import androidx.compose.foundation.layout.*
import androidx.compose.foundation.lazy.LazyColumn
import androidx.compose.foundation.lazy.items
import androidx.compose.material.icons.Icons
import androidx.compose.material.icons.filled.*
import androidx.compose.material3.*
import androidx.compose.runtime.*
import androidx.compose.ui.Alignment
import androidx.compose.ui.Modifier
import androidx.compose.ui.text.font.FontWeight
import androidx.compose.ui.unit.dp
import androidx.navigation.NavController
import com.rio.rostry.auth.UserClaims
import com.rio.rostry.navigation.RIODestinations

/**
 * Dashboard for General tier users
 * Provides basic fowl browsing and marketplace access
 */
@OptIn(ExperimentalMaterial3Api::class)
@Composable
fun GeneralUserDashboard(
    claims: UserClaims,
    navController: NavController,
    onSignOut: () -> Unit
) {
    Scaffold(
        topBar = {
            TopAppBar(
                title = { Text("RIO - General User") },
                actions = {
                    IconButton(onClick = { navController.navigate(RIODestinations.PROFILE) }) {
                        Icon(Icons.Default.Person, contentDescription = "Profile")
                    }
                    IconButton(onClick = onSignOut) {
                        Icon(Icons.Default.ExitToApp, contentDescription = "Sign Out")
                    }
                }
            )
        }
    ) { paddingValues ->
        LazyColumn(
            modifier = Modifier
                .fillMaxSize()
                .padding(paddingValues)
                .padding(16.dp),
            verticalArrangement = Arrangement.spacedBy(16.dp)
        ) {
            item {
                WelcomeCard(claims = claims)
            }
            
            item {
                Text(
                    text = "Available Features",
                    style = MaterialTheme.typography.headlineSmall,
                    fontWeight = FontWeight.Bold
                )
            }
            
            items(getGeneralUserFeatures()) { feature ->
                FeatureCard(
                    feature = feature,
                    onClick = { navController.navigate(feature.destination) }
                )
            }
            
            item {
                UpgradePromptCard(
                    onUpgradeClick = { navController.navigate(RIODestinations.PROFILE) }
                )
            }
        }
    }
}

@Composable
private fun WelcomeCard(claims: UserClaims) {
    Card(
        modifier = Modifier.fillMaxWidth(),
        colors = CardDefaults.cardColors(
            containerColor = MaterialTheme.colorScheme.primaryContainer
        )
    ) {
        Column(
            modifier = Modifier.padding(16.dp)
        ) {
            Text(
                text = "Welcome, ${claims.displayName ?: "User"}!",
                style = MaterialTheme.typography.headlineSmall,
                fontWeight = FontWeight.Bold
            )
            Spacer(modifier = Modifier.height(8.dp))
            Text(
                text = "Tier: ${claims.tier}",
                style = MaterialTheme.typography.bodyMedium
            )
            Text(
                text = "Explore the marketplace and discover amazing fowl!",
                style = MaterialTheme.typography.bodyMedium
            )
        }
    }
}

@Composable
private fun FeatureCard(
    feature: DashboardFeature,
    onClick: () -> Unit
) {
    Card(
        onClick = onClick,
        modifier = Modifier.fillMaxWidth()
    ) {
        Row(
            modifier = Modifier
                .fillMaxWidth()
                .padding(16.dp),
            verticalAlignment = Alignment.CenterVertically
        ) {
            Icon(
                imageVector = feature.icon,
                contentDescription = feature.title,
                modifier = Modifier.size(32.dp),
                tint = MaterialTheme.colorScheme.primary
            )
            Spacer(modifier = Modifier.width(16.dp))
            Column(modifier = Modifier.weight(1f)) {
                Text(
                    text = feature.title,
                    style = MaterialTheme.typography.titleMedium,
                    fontWeight = FontWeight.Medium
                )
                Text(
                    text = feature.description,
                    style = MaterialTheme.typography.bodyMedium,
                    color = MaterialTheme.colorScheme.onSurfaceVariant
                )
            }
            Icon(
                imageVector = Icons.Default.ChevronRight,
                contentDescription = "Navigate",
                tint = MaterialTheme.colorScheme.onSurfaceVariant
            )
        }
    }
}

@Composable
private fun UpgradePromptCard(onUpgradeClick: () -> Unit) {
    Card(
        modifier = Modifier.fillMaxWidth(),
        colors = CardDefaults.cardColors(
            containerColor = MaterialTheme.colorScheme.secondaryContainer
        )
    ) {
        Column(
            modifier = Modifier.padding(16.dp)
        ) {
            Text(
                text = "Unlock More Features",
                style = MaterialTheme.typography.titleMedium,
                fontWeight = FontWeight.Bold
            )
            Spacer(modifier = Modifier.height(8.dp))
            Text(
                text = "Upgrade to Farmer or Enthusiast tier to register fowl, access family trees, and more!",
                style = MaterialTheme.typography.bodyMedium
            )
            Spacer(modifier = Modifier.height(12.dp))
            Button(
                onClick = onUpgradeClick,
                modifier = Modifier.fillMaxWidth()
            ) {
                Text("Upgrade Account")
            }
        }
    }
}

private fun getGeneralUserFeatures(): List<DashboardFeature> {
    return listOf(
        DashboardFeature(
            title = "Marketplace",
            description = "Browse and search fowl listings",
            icon = Icons.Default.Store,
            destination = RIODestinations.MARKETPLACE
        ),
        DashboardFeature(
            title = "Chat",
            description = "Connect with other users",
            icon = Icons.Default.Chat,
            destination = RIODestinations.CHAT
        )
    )
}

data class DashboardFeature(
    val title: String,
    val description: String,
    val icon: androidx.compose.ui.graphics.vector.ImageVector,
    val destination: String
)
